<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use Ikoncept\Fabriq\Http\Controllers\Controller;
use Ikoncept\Fabriq\Http\Requests\Create{{ model }}Request;
use Ikoncept\Fabriq\Http\Requests\Update{{ model }}Request;
use Ikoncept\Fabriq\Transformers\{{ model }}Transformer;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;
use Spatie\QueryBuilder\AllowedFilter;
use Spatie\QueryBuilder\QueryBuilder;

class {{ class }} extends ApiController
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function index() : JsonResponse
    {
        $eagerLoad = $this->getEagerLoad({{ model }}::RELATIONSHIPS);
        ${{ modelVariable }} = QueryBuilder::for({{ model }}::class)
            ->allowedSorts(['name', 'updated_at', 'publishes_at'])
            ->allowedFilters([
                AllowedFilter::scope('search'),
                AllowedFilter::scope('published')
            ])
            ->with($eagerLoad)
            ->paginate($this->number);

        return $this->respondWithPaginator(${{ modelVariable }}, new {{ model }}Transformer());
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function show({{ model }} ${{ modelVariable }})
    {
        //
    }
}
